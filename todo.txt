server:
  - thread parent:
    - queues d'entrées et sortie
    - liste id -> (queue in, queue out)
    - accept
      - non bloquant
      - créer thread et queues
      - enregistrer les queues
    - pour chaque connexion
      - dequeue (non bloquant)
      - broadcast
  - thread connexion:
    - read(socket) non bloquant -> enqueue(parent)
    - dequeue(parent) non bloquant -> write(socket)
    - si close, stop
client:
  - thread ui:
    - obtenir message de l'utilisateur -> enqueue(network)
    - dequeue(network) -> afficher message
  - thread network:
    - dequeue(ui) -> write(sock)
    - read(sock) -> enqueue(ui)
